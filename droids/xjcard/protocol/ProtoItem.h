/********************************************************************
 * This file is generated by program cap
 * Please do not change it directly
 * 
 * protocol name: CProto
 * protocol version: 1.0
 * protocol author:   
 * protocol desc: 仙剑卡牌客户端后台交互协议-控制协议
 *
 * history:
 * 2013-02-22 : 创建 (V1.0)
********************************************************************/

#include "ProtoItemDef.h"

#ifndef __ProtoItem_H__ 
#define __ProtoItem_H__ 

#include "CProto_Common.h"

#include "CProto.h"



namespace CProto {
class XJCMD_CSC_ITEM_OPERCS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_ITEM_OPERCS();
    void SetDefault();

    
/* 物品操作类型 */
    unsigned char opertype;
/* 物品操作容器类型 */
    unsigned char containertype;
/* 物品所在容器格子号 */
    unsigned short gridid;
/* 出售装备或批量更换装备的格子号数组 */
    unsigned short gridids_arraylen;	unsigned short gridids[MAX_LEN_SMALL];
/* 操作的物品数量 */
    unsigned char opercnt;
/* 装备所在阵法的下标 */
    unsigned char equipbattle;
/* 装备是否在援护阵法中，0 正式阵位 1 援护阵位 */
    unsigned char equipassist;
/* 装备强化类型（见ITEM_SOLID_TYPE） */
    unsigned short equipsolidtype;
/* 装备升阶炼化度消耗材料 */
    unsigned short materialgrids_arraylen;	unsigned short materialgrids[MAX_LEN_SMALL];
/* 装备升阶炼化度消耗材料数量 */
    unsigned short materialcnts_arraylen;	unsigned short materialcnts[MAX_LEN_SMALL];

private:
    unsigned int arraysize;
};
class XJCMD_CSC_ITEM_OPERSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_ITEM_OPERSC();
    void SetDefault();

    
/* 返回的物品操作类型 */
    unsigned char opertype;
/* 返回的物品操作容器类型 */
    unsigned char containertype;
/* 返回的物品所在容器格子号 */
    unsigned short gridid;
/* 返回的出售装备的格子号数组 */
    unsigned short gridids_arraylen;	unsigned short gridids[MAX_LEN_SMALL];
/* 操作结果（0成功 1其他失败） */
    unsigned char operstatus;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_ITEM_2_EXPCS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_ITEM_2_EXPCS();
    void SetDefault();

    
/* 经验道具的id */
    int item_id;
/* 武将索引 */
    short general_index;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_ITEM_2_EXPSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_ITEM_2_EXPSC();
    void SetDefault();

    
/* 经验道具的id */
    int item_id;
/* 升了多少级 */
    unsigned char levels_upgraded;
/* 武将索引 */
    short general_index;

private:
    unsigned int arraysize;
};
};


#endif

