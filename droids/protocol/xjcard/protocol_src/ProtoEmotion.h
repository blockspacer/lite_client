/********************************************************************
 * This file is generated by program cap
 * Please do not change it directly
 * 
 * protocol name: CProto
 * protocol version: 1.0
 * protocol author:   
 * protocol desc: 仙剑卡牌客户端后台交互协议-控制协议
 *
 * history:
 * 2013-02-22 : 创建 (V1.0)
********************************************************************/

#include "ProtoEmotionDef.h"

#ifndef __ProtoEmotion_H__ 
#define __ProtoEmotion_H__ 

#include "CProto_Common.h"

#include "CProto.h"



namespace CProto {
/* 约会结算 */
struct dateReward {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    dateReward();
    void SetDefault();

/* 战斗类型 */
    eBattleType battleType;
/* 战斗结果，>0 赢，几星；<0 输 */
    char resultFlag;
/* 战斗总积分，客户端最后校验 */
    int totalScore;
/* 积分排行榜，不推送时，表示排名未上升 */
    proto_vector<ScoreRankItem> scoreRankList;
/* 主角战斗前阅历 */
    unsigned int userExp;
/* 奖励阅历相关 */
    LevelUpRelated userExpRelated;
/* 奖励银两 */
    unsigned int userMoneySilver;
/* 是否升级，1：是 */
    char userLevelUpFlag;
/* 伙伴经验增量 */
    short generalExpAdd;
/* 武将、援护奖励数组 */
    unsigned char generals_arraylen;	BattleReslutGeneral generals[MAX_BATTLE_OBJ_NUM];
/* 掉落内容 */
    unsigned char items_arraylen;	DropItem items[MAX_BATTLE_DROP_ITEM_NUM];
/* 按钮 */
    unsigned char buttons_arraylen;	ButtonItem buttons[MAX_BUTTON_NUM];

private:
    unsigned int arraysize;
};
/* 武将好感度属性 */
struct stAdmireInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    stAdmireInfo();
    void SetDefault();

/* 武将id */
    short generalId;
/* 好感度数值 */
    int admireValue;
/* 上次交互时间 */
    int lastContactTime;
/* 好感度升级领奖标记 */
    unsigned char admireRewardFlag_arraylen;	unsigned char admireRewardFlag[(1+(PROTO_MAX_ADMIRE_GENERAL_LEVEL-1)/8)];
/* 是否去过某场景 */
    unsigned char senarioWent_arraylen;	unsigned char senarioWent[(1+(PROTO_MAX_ADMIRE_SENARIO-1)/8)];
/* 是否送过某礼物 */
    unsigned char presentSend_arraylen;	unsigned char presentSend[(1+(PROTO_MAX_ADMIRE_PRESENT-1)/8)];

private:
    unsigned int arraysize;
};
/* 好感度相关 */
struct stAdmireList {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    stAdmireList();
    void SetDefault();

/* 武将好感度列表，登录全量，变化增量 */
    unsigned char admireList_arraylen;	stAdmireInfo admireList[PROTO_MAX_ADMIRE_GENERAL_NUM];

private:
    unsigned int arraysize;
};
/* 可赠送格子内容 */
struct stPresentInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    stPresentInfo();
    void SetDefault();

/* 格子序号，从0开始 */
    short tableIndex;
/* 礼品ID */
    int presentID;
/* 礼品个数 */
    int count;
/* 礼物类型 */
    USER_EMOTION_PRESENT_TYPE present_type;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_CHAT_STORYCS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_CHAT_STORYCS();
    void SetDefault();

    
/* 闲聊对话伙伴ID */
    short chat_general_id;
/* 闲聊对话主题 */
    int chat_story_id;
/* 对话选项 */
    char chat_option;
/* 对话场景ID */
    short senario_id;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_CHAT_STORYSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_CHAT_STORYSC();
    void SetDefault();

    
/* 能否闲聊，后台二次校验 */
    char result;
/* 好感度变化值正加，负减 */
    short admire_result;
/* 约会关奖励 */
    unsigned char date_reward_arraylen;	dateReward date_reward[1];

private:
    unsigned int arraysize;
};
class XJCMD_CSC_ASK_DATECS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_ASK_DATECS();
    void SetDefault();

    
/* 武将id */
    int general_id;
/* 邀约场景 */
    int senario_id;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_ASK_DATESC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_ASK_DATESC();
    void SetDefault();

    
/* 能否闲聊，后台二次校验 */
    char result;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_GENERAL_PRESENTCS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_GENERAL_PRESENTCS();
    void SetDefault();

    
/* 武将ID */
    int general_id;
/* 礼物id */
    int present_id;
/* 礼物index */
    int tableIndex;
/* 礼物类型 */
    USER_EMOTION_PRESENT_TYPE present_type;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_GENERAL_PRESENTSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_GENERAL_PRESENTSC();
    void SetDefault();

    
/* 是否成功 */
    char result;
/* 操作好感度基础返回 */
    int admire_count;
/* 操作好感度额外返回 */
    int admire_count_add;
/* 是否当日喜欢 */
    int fav_type;
/* 武将ID */
    int general_id;
/* 礼物id */
    int present_id;
/* 礼物剩余个数 */
    int count;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_GENERAL_ADMIRE_LEVEL_UPCS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_GENERAL_ADMIRE_LEVEL_UPCS();
    void SetDefault();

    
/* 武将id */
    short general_id;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_GENERAL_ADMIRE_LEVEL_UPSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_GENERAL_ADMIRE_LEVEL_UPSC();
    void SetDefault();

    
/* 是否成功 */
    char result;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_PRESENT_SHOPCS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_PRESENT_SHOPCS();
    void SetDefault();

    
/* 礼品id */
    int present_id;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_PRESENT_SHOPSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_PRESENT_SHOPSC();
    void SetDefault();

    
/* 是否成功 */
    char result;

private:
    unsigned int arraysize;
};
class XJCMD_SC_EMOTION_SYNCSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_SC_EMOTION_SYNCSC();
    void SetDefault();

    
/* 版本号 */
    char version;
/* 角色数据脏标记 */
    unsigned char dirtyflag_arraylen;	unsigned char dirtyflag[(1+(EMOTION_ASC_NUM-1)/8)];
/* 好感度 */
    stAdmireList general_admire;
/* 所有武将吃醋状态 */
    unsigned char jealousFlag_arraylen;	unsigned char jealousFlag[(1+(PROTO_MAX_ADMIRE_GENERAL_NUM-1)/8)];
/* 所有武将本日已聊过 */
    unsigned char chatted_arraylen;	unsigned char chatted[(1+(PROTO_MAX_ADMIRE_GENERAL_NUM-1)/8)];
/* 所有武将本日邀约成功，约会中 */
    unsigned char dating_arraylen;	unsigned char dating[(1+(PROTO_MAX_ADMIRE_GENERAL_NUM-1)/8)];
/* 所有武将本日已邀约过 */
    unsigned char dated_arraylen;	unsigned char dated[(1+(PROTO_MAX_ADMIRE_GENERAL_NUM-1)/8)];
/* 赠送列表 */
    unsigned char general_present_arraylen;	stPresentInfo general_present[PROTO_MAX_ADMIRE_PRESENT];
/* 剩余购买次数 */
    unsigned char remain_present_time;

private:
    unsigned int arraysize;
};
};


#endif

