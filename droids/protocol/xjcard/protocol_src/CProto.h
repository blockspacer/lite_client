/********************************************************************
 * This file is generated by program cap
 * Please do not change it directly
 * 
 * protocol name: CProto
 * protocol version: 1.0
 * protocol author:   
 * protocol desc: 仙剑卡牌客户端后台交互协议-控制协议
 *
 * history:
 * 2013-02-22 : 创建 (V1.0)
********************************************************************/

#include "CProtoDef.h"

#ifndef __CProto_H__ 
#define __CProto_H__ 

#include "CProto_Common.h"


namespace CProto {
/* 升级相关经验、等级数据 */
struct LevelUpRelated {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    LevelUpRelated();
    void SetDefault();

/* 战斗前经验百分比 */
    unsigned char exp_rate_before;
/* 战斗后经验百分比 */
    unsigned char exp_rate_after;
/* 战斗前等级 */
    short level_before;
/* 战斗后等级升级数 */
    unsigned char level_delta;

private:
    unsigned int arraysize;
};
/* 武将结算信息 */
struct BattleReslutGeneral {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    BattleReslutGeneral();
    void SetDefault();

/* 武将容器中索引 */
    short index;
/* 伙伴经验相关 */
    LevelUpRelated generalLevelRelated;
/* 援护卡牌武将容器中索引 */
    short assistantIndex;
/* 援护经验相关 */
    LevelUpRelated assistantLevelRelated;

private:
    unsigned int arraysize;
};
/* 掉落内容 */
struct DropItem {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    DropItem();
    void SetDefault();

/* 奖励类型，参考上面枚举 */
    eRewardType awardtype;
/* ID */
    int id;
/* 容器中索引 */
    short conIndex;
/* 数量 */
    unsigned char count;

private:
    unsigned int arraysize;
};
/* 结算界面按钮 */
struct ButtonItem {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ButtonItem();
    void SetDefault();

/* 预留 */
    char type;
/* 预留 */
    unsigned char param_arraylen;	int param[MAX_BUTTON_PARAM_NUM];

private:
    unsigned int arraysize;
};
/* 积分排行内容 */
struct ScoreRankItem {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ScoreRankItem();
    void SetDefault();

/* 排名，好友上限50，故1-50 */
    char rankId;
/* 好友头像ID */
    short portraitId;
/* 好友名称 */
    unsigned char name_arraylen;	char name[MAX_NAME_LEN];
/* 好友积分 */
    int sore;

private:
    unsigned int arraysize;
};
/* Qhtml结构 */
struct stQhtml {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    stQhtml();
    void SetDefault();

/* Qhtml字符串 */
    proto_vector<char> value;

private:
    unsigned int arraysize;
};
};


#endif

