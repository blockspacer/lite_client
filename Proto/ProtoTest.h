/********************************************************************
 * This file is generated by program cap
 * Please do not change it directly
 * 
 * protocol name: CProto
 * protocol version: 1.0
 * protocol author:   
 * protocol desc: 仙剑卡牌客户端后台交互协议-控制协议
 *
 * history:
 * 2013-02-22 : 创建 (V1.0)
********************************************************************/

#include "ProtoTestDef.h"

#ifndef __ProtoTest_H__ 
#define __ProtoTest_H__ 

#include "CProto_Common.h"

#include "CProto.h"



namespace CProto {
/* 测试结构体 */
struct stTestStruct {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    stTestStruct();
    void SetDefault();

/* test */
    int Test;
/* test */
    unsigned char TestCArray_arraylen;	short TestCArray[10];
/* test */
    proto_vector<int> TestArray;

private:
    unsigned int arraysize;
};
class XJCMD_SC_TESTCS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_SC_TESTCS();
    void SetDefault();

    
/* test string */
    unsigned short test_arraylen;	char test[MAX_NAME_LEN];
/* test struct */
    proto_vector<stTestStruct> stTest;

private:
    unsigned int arraysize;
};
class XJCMD_SC_TESTSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_SC_TESTSC();
    void SetDefault();

    
/* test string */
    unsigned short test_arraylen;	char test[MAX_NAME_LEN];
/* test struct */
    proto_vector<stTestStruct> stTest;

private:
    unsigned int arraysize;
};
};


#endif

