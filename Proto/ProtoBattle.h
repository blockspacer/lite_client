/********************************************************************
 * This file is generated by program cap
 * Please do not change it directly
 * 
 * protocol name: CProto
 * protocol version: 1.0
 * protocol author:   
 * protocol desc: 仙剑卡牌客户端后台交互协议-控制协议
 *
 * history:
 * 2013-02-22 : 创建 (V1.0)
********************************************************************/

#include "ProtoBattleDef.h"

#ifndef __ProtoBattle_H__ 
#define __ProtoBattle_H__ 

#include "CProto_Common.h"

#include "CProto.h"



namespace CProto {
/* 战斗阵营信息 */
struct ProtoBattleCampInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleCampInfo();
    void SetDefault();

/* 玩家guid */
    proto_vector<uint64_t> user_guid;

private:
    unsigned int arraysize;
};
/* 车轮每轮战斗开始信息 */
struct ProtoBattleFightInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleFightInfo();
    void SetDefault();

/* 阵型id */
    proto_vector<int> battle_array_id;
/* 连携技能属性类型 */
    char super_element;

private:
    unsigned int arraysize;
};
/* 战斗武将战斗信息 */
struct ProtoBattleGeneralInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleGeneralInfo();
    void SetDefault();

/* 武将配表id */
    int id;
/* 援护武将配表id */
    int assist_id;
/* 武将位置（0~30） */
    char pos;
/* 武将最大生命值 */
    int max_hp;

private:
    unsigned int arraysize;
};
/* 攻击者场景obj数据 */
struct ProtoBattleAttackerObj {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleAttackerObj();
    void SetDefault();

/* 武将最大生命值 */
    int max_hp;
/* 武将生命变化（<0:去血，>0:加血） */
    int diff_hp;
/* 攻击状态标记（eProtoBattleAttackState） */
    proto_vector<unsigned char> fight_state;
/* 援护条数值（百分比） */
    char assist_value;

private:
    unsigned int arraysize;
};
/* 攻击者总数据 */
struct ProtoBattleAttacker {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleAttacker();
    void SetDefault();

/* 武将位置（0~30） */
    char pos;
/* obj数据 */
    ProtoBattleAttackerObj obj_data;

private:
    unsigned int arraysize;
};
/* 防御者场景obj数据 */
struct ProtoBattleDefenderObj {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleDefenderObj();
    void SetDefault();

/* 武将最大生命值 */
    int max_hp;
/* 武将生命变化（<0:去血，>0:加血） */
    int diff_hp;
/* 防御状态标记（eProtoBattleDefendState） */
    proto_vector<unsigned char> fight_state;
/* 援护进度条数值（百分比） */
    char assist_value;

private:
    unsigned int arraysize;
};
/* 防御者总数据 */
struct ProtoBattleDefender {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleDefender();
    void SetDefault();

/* 武将位置（0~30） */
    char pos;
/* obj数据 */
    ProtoBattleDefenderObj obj_data;

private:
    unsigned int arraysize;
};
/* 效果触发者的场景obj数据 */
struct ProtoBattleImpactObj {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleImpactObj();
    void SetDefault();

/* 武将最大生命值 */
    int max_hp;
/* 武将生命变化（<0:去血，>0:加血） */
    int diff_hp;
/* 防御状态标记（eProtoBattleDefendState） */
    proto_vector<unsigned char> fight_state;
/* 援护进度条数值（百分比） */
    char assist_value;

private:
    unsigned int arraysize;
};
/* 效果触发者总数据 */
struct ProtoBattleImpacter {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleImpacter();
    void SetDefault();

/* 效果触发类型（eProtoBattleImpactOpType） */
    char op_type;
/* 效果id */
    proto_vector<int> impact_id;
/* 武将位置（0~30） */
    char pos;
/* obj数据 */
    ProtoBattleImpactObj obj_data;

private:
    unsigned int arraysize;
};
/* 战斗攻击skill信息 */
struct ProtoBattleSkillInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleSkillInfo();
    void SetDefault();

/* 技能配表id */
    int id;
/* 攻击武将数组 */
    proto_vector<ProtoBattleAttacker> attackers;
/* 防御武将数组 */
    proto_vector<ProtoBattleDefender> defenders;
/* 触发效果武将数组 */
    proto_vector<ProtoBattleImpacter> impacters;
/* 必杀技进度条数值（百分比） */
    char super_value;
/* 战斗评分 */
    int score;

private:
    unsigned int arraysize;
};
/* 合击每次比拼的数据 */
struct ProtoBattleJointAttackData {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleJointAttackData();
    void SetDefault();

/* 参与比拼的武将pos */
    proto_vector<char> joint_pos;
/* 比拼飞出的武将pos */
    proto_vector<char> fly_pos;
/* 比拼双方剩余的合击条的百分比 */
    proto_vector<char> joint_rate;
/* 战斗评分 */
    int score;

private:
    unsigned int arraysize;
};
/* 最后合击信息 */
struct ProtoBattleJointAttackInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleJointAttackInfo();
    void SetDefault();

/* 合击比拼数据 */
    proto_vector<ProtoBattleJointAttackData> joint_datas;

private:
    unsigned int arraysize;
};
/* 战斗攻击skill信息 */
struct ProtoBattleAttackOrderInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleAttackOrderInfo();
    void SetDefault();

/* 战斗出手序列 */
    proto_vector<char> attack_order;

private:
    unsigned int arraysize;
};
/* 轮开始信息 */
struct ProtoBattleRoundInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleRoundInfo();
    void SetDefault();

/* 当前的轮 */
    char curr_round;

private:
    unsigned int arraysize;
};
/* 回合开始信息 */
struct ProtoBattleTurnInfo {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleTurnInfo();
    void SetDefault();

/* 当前的回合 */
    char curr_turn;

private:
    unsigned int arraysize;
};
/* 整场战斗的序列索引节点 */
struct ProtoBattleFightNode {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleFightNode();
    void SetDefault();

/* 节点数据类型(eProtoBattleFightNodeType) */
    char type;
/* 节点数据索引 */
    unsigned short index;

private:
    unsigned int arraysize;
};
/* 战斗完整协议报 */
struct ProtoBattleField {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    ProtoBattleField();
    void SetDefault();

/* 场景id */
    int stage_id;
/* 阵营信息 */
    proto_vector<ProtoBattleCampInfo> camps;
/* 战场标志（eProtoBattleFieldFlag） */
    proto_vector<unsigned char> flags;
/* 最大回合数 */
    char max_turn;
/* 整场战斗中的车轮战每轮战斗序列 */
    proto_vector<ProtoBattleFightInfo> fights;
/* 进入战场的武将数组 */
    proto_vector<ProtoBattleGeneralInfo> general_add;
/* 整场战斗中的攻击序列 */
    proto_vector<ProtoBattleSkillInfo> skills;
/* 整场战斗中的轮序列 */
    proto_vector<ProtoBattleRoundInfo> rounds;
/* 整场战斗中的回合序列 */
    proto_vector<ProtoBattleTurnInfo> turns;
/* 整场战斗中的攻击序列 */
    proto_vector<ProtoBattleAttackOrderInfo> attack_orders;
/* 整场战斗中的合击信息序列 */
    proto_vector<ProtoBattleJointAttackInfo> joint_attacks;
/* 整场战斗中的攻击序列 */
    proto_vector<ProtoBattleFightNode> fight_node_array;

private:
    unsigned int arraysize;
};
class XJCMD_SC_BATTLESC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_SC_BATTLESC();
    void SetDefault();

    
/* 战场数组 */
    ProtoBattleField battleFiled;
/* 战斗类型 */
    eBattleType battleType;
/* 战斗结果，>0 赢，几星；<0 输 */
    char resultFlag;
/* 战斗总积分，客户端最后校验 */
    int totalScore;
/* 积分排行榜，不推送时，表示排名未上升 */
    proto_vector<ScoreRankItem> scoreRankList;
/* 主角战斗前阅历 */
    unsigned int userExp;
/* 奖励阅历相关 */
    LevelUpRelated userExpRelated;
/* 奖励银两 */
    unsigned int userMoneySilver;
/* 是否升级，1：是 */
    char userLevelUpFlag;
/* 伙伴经验增量 */
    short generalExpAdd;
/* 武将、援护奖励数组 */
    unsigned char generals_arraylen;	BattleReslutGeneral generals[MAX_BATTLE_OBJ_NUM];
/* 掉落内容 */
    unsigned char items_arraylen;	DropItem items[MAX_BATTLE_DROP_ITEM_NUM];
/* 按钮 */
    unsigned char buttons_arraylen;	ButtonItem buttons[MAX_BUTTON_NUM];

private:
    unsigned int arraysize;
};
};


#endif

