/********************************************************************
 * This file is generated by program cap
 * Please do not change it directly
 * 
 * protocol name: CProto
 * protocol version: 1.0
 * protocol author:   
 * protocol desc: 仙剑卡牌客户端后台交互协议-控制协议
 *
 * history:
 * 2013-02-22 : 创建 (V1.0)
********************************************************************/

#include "ProtoTitleDef.h"

#ifndef __ProtoTitle_H__ 
#define __ProtoTitle_H__ 

#include "CProto_Common.h"

#include "CProto.h"



namespace CProto {
/* 称号列表数据 */
struct stTitleListData {
public:
    void Encode(unsigned char *buffer, unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer, unsigned int& bufferlen) throw (DecodeError);

    stTitleListData();
    void SetDefault();

/* 称号在容器中的索引 */
    short titleIndex;
/* 称号ID */
    short titleID;
/* 称号状态类型 */
    char titleState;
/* 到期时间 */
    unsigned int timeOutValue;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_TITLE_ADDSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_TITLE_ADDSC();
    void SetDefault();

    
/* 称号在容器中的索引 */
    short titleIndex;
/* 称号ID */
    short titleID;

private:
    unsigned int arraysize;
};
class XJCMD_SC_TITLE_STATE_LIST_SYNSC : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_SC_TITLE_STATE_LIST_SYNSC();
    void SetDefault();

    
/* 数据版本号 */
    char user_version;
/* 客户端显示称号列表 */
    proto_vector<stTitleListData> titleStateList;

private:
    unsigned int arraysize;
};
class XJCMD_CSC_TITLE_USECS : public PackBody{
public:
    static int GetCommandID();
    void Encode(unsigned char *buffer,unsigned int& buffersize) throw (EncodeError);
    void Decode(const unsigned char* buffer,unsigned int& bufferlen) throw (DecodeError);
    int CommandID();

    XJCMD_CSC_TITLE_USECS();
    void SetDefault();

    
/* 使用方式（0-取消，1-使用） */
    char type;
/* 要使用称号在容器中的索引 */
    short titleIndex;

private:
    unsigned int arraysize;
};
};


#endif

